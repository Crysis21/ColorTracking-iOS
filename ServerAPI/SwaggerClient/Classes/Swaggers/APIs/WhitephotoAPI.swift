//
// WhitephotoAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire

extension SwaggerClientAPI {


open class WhitephotoAPI: APIBase {
    /**
     getPhotos
     
     - parameter count: (query) count (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getPhotosUsingGET(count: Int32? = nil, completion: @escaping ((_ data: [WhiteImage]?,_ error: Error?) -> Void)) {
        getPhotosUsingGETWithRequestBuilder(count: count).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     getPhotos
     - GET /photos
     - examples: [{output=none}]
     
     - parameter count: (query) count (optional)

     - returns: RequestBuilder<[WhiteImage]> 
     */
    open class func getPhotosUsingGETWithRequestBuilder(count: Int32? = nil) -> RequestBuilder<[WhiteImage]> {
        let path = "/photos"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems(values:[
            "count": count?.encodeToJSON()
        ])
        

        let requestBuilder: RequestBuilder<[WhiteImage]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     upload
     
     - parameter background: (form) background 
     - parameter subject: (form) subject 
     - parameter thumb: (form) thumb 
     - parameter name: (query) name (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func uploadUsingPOST(background: URL, subject: URL, thumb: URL, name: String? = nil, completion: @escaping ((_ data: WhiteImage?,_ error: Error?) -> Void)) {
        uploadUsingPOSTWithRequestBuilder(background: background, subject: subject, thumb: thumb, name: name).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     upload
     - POST /photos
     - examples: [{output=none}]
     
     - parameter background: (form) background 
     - parameter subject: (form) subject 
     - parameter thumb: (form) thumb 
     - parameter name: (query) name (optional)

     - returns: RequestBuilder<WhiteImage> 
     */
    open class func uploadUsingPOSTWithRequestBuilder(background: URL, subject: URL, thumb: URL, name: String? = nil) -> RequestBuilder<WhiteImage> {
        let path = "/photos"
        let URLString = SwaggerClientAPI.basePath + path
        let formParams: [String:Any?] = [
            "background": background,
            "subject": subject,
            "thumb": thumb
        ]

        let nonNullParameters = APIHelper.rejectNil(formParams)
        let parameters = APIHelper.convertBoolToString(nonNullParameters)

        let url = NSURLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems(values:[
            "name": name
        ])
        

        let requestBuilder: RequestBuilder<WhiteImage>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
}
